{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IlazG\\\\Desktop\\\\Poliklinika\\\\src\\\\context\\\\DoctorsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorsContext = /*#__PURE__*/createContext();\nconst initialDoctors = [{\n  id: 1,\n  name: 'Dr. Sarah Johnson',\n  department: 'Cardiology',\n  image: 'https://images.unsplash.com/photo-1594824476967-48c8b964273f?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n  available: true,\n  specialization: 'Cardiac Surgery',\n  experience: '15 years',\n  education: 'MD, PhD'\n}, {\n  id: 2,\n  name: 'Dr. Michael Chen',\n  department: 'Neurology',\n  image: 'https://images.unsplash.com/photo-1612349317150-e413f6a5b16d?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n  available: true,\n  specialization: 'Neurological Disorders',\n  experience: '12 years',\n  education: 'MD, Neurology'\n}, {\n  id: 3,\n  name: 'Dr. Emily Martinez',\n  department: 'Pediatrics',\n  image: 'https://images.unsplash.com/photo-1559839734-2b71ea197ec2?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n  available: true,\n  specialization: 'Child Care',\n  experience: '10 years',\n  education: 'MD, Pediatrics'\n}, {\n  id: 4,\n  name: 'Dr. James Wilson',\n  department: 'Orthopedics',\n  image: 'https://images.unsplash.com/photo-1537368910025-700350fe46c7?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n  available: true,\n  specialization: 'Bone Surgery',\n  experience: '18 years',\n  education: 'MD, Orthopedics'\n}];\nexport const DoctorsProvider = ({\n  children\n}) => {\n  _s();\n  const [doctors, setDoctors] = useState(() => {\n    const savedDoctors = localStorage.getItem('doctors');\n    return savedDoctors ? JSON.parse(savedDoctors) : initialDoctors;\n  });\n\n  // Save doctors to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('doctors', JSON.stringify(doctors));\n  }, [doctors]);\n  const addDoctor = doctor => {\n    const newDoctor = {\n      ...doctor,\n      id: Date.now(),\n      available: true\n    };\n    setDoctors([...doctors, newDoctor]);\n  };\n  const updateDoctor = updatedDoctor => {\n    setDoctors(doctors.map(doc => doc.id === updatedDoctor.id ? updatedDoctor : doc));\n  };\n  const deleteDoctor = id => {\n    setDoctors(doctors.filter(doctor => doctor.id !== id));\n  };\n  const toggleAvailability = id => {\n    setDoctors(doctors.map(doctor => doctor.id === id ? {\n      ...doctor,\n      available: !doctor.available\n    } : doctor));\n  };\n  return /*#__PURE__*/_jsxDEV(DoctorsContext.Provider, {\n    value: {\n      doctors,\n      addDoctor,\n      updateDoctor,\n      deleteDoctor,\n      toggleAvailability\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorsProvider, \"hEhY43zkHFUIQBFKZ88AEMpwQjc=\");\n_c = DoctorsProvider;\nexport const useDoctors = () => {\n  _s2();\n  const context = useContext(DoctorsContext);\n  if (!context) {\n    throw new Error('useDoctors must be used within a DoctorsProvider');\n  }\n  return context;\n};\n_s2(useDoctors, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"DoctorsProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","DoctorsContext","initialDoctors","id","name","department","image","available","specialization","experience","education","DoctorsProvider","children","_s","doctors","setDoctors","savedDoctors","localStorage","getItem","JSON","parse","setItem","stringify","addDoctor","doctor","newDoctor","Date","now","updateDoctor","updatedDoctor","map","doc","deleteDoctor","filter","toggleAvailability","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useDoctors","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/IlazG/Desktop/Poliklinika/src/context/DoctorsContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst DoctorsContext = createContext();\r\n\r\nconst initialDoctors = [\r\n  {\r\n    id: 1,\r\n    name: 'Dr. Sarah Johnson',\r\n    department: 'Cardiology',\r\n    image: 'https://images.unsplash.com/photo-1594824476967-48c8b964273f?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\r\n    available: true,\r\n    specialization: 'Cardiac Surgery',\r\n    experience: '15 years',\r\n    education: 'MD, PhD'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Dr. Michael Chen',\r\n    department: 'Neurology',\r\n    image: 'https://images.unsplash.com/photo-1612349317150-e413f6a5b16d?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\r\n    available: true,\r\n    specialization: 'Neurological Disorders',\r\n    experience: '12 years',\r\n    education: 'MD, Neurology'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Dr. Emily Martinez',\r\n    department: 'Pediatrics',\r\n    image: 'https://images.unsplash.com/photo-1559839734-2b71ea197ec2?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\r\n    available: true,\r\n    specialization: 'Child Care',\r\n    experience: '10 years',\r\n    education: 'MD, Pediatrics'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Dr. James Wilson',\r\n    department: 'Orthopedics',\r\n    image: 'https://images.unsplash.com/photo-1537368910025-700350fe46c7?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\r\n    available: true,\r\n    specialization: 'Bone Surgery',\r\n    experience: '18 years',\r\n    education: 'MD, Orthopedics'\r\n  }\r\n];\r\n\r\nexport const DoctorsProvider = ({ children }) => {\r\n  const [doctors, setDoctors] = useState(() => {\r\n    const savedDoctors = localStorage.getItem('doctors');\r\n    return savedDoctors ? JSON.parse(savedDoctors) : initialDoctors;\r\n  });\r\n\r\n  // Save doctors to localStorage whenever they change\r\n  useEffect(() => {\r\n    localStorage.setItem('doctors', JSON.stringify(doctors));\r\n  }, [doctors]);\r\n\r\n  const addDoctor = (doctor) => {\r\n    const newDoctor = {\r\n      ...doctor,\r\n      id: Date.now(),\r\n      available: true\r\n    };\r\n    setDoctors([...doctors, newDoctor]);\r\n  };\r\n\r\n  const updateDoctor = (updatedDoctor) => {\r\n    setDoctors(doctors.map(doc => \r\n      doc.id === updatedDoctor.id ? updatedDoctor : doc\r\n    ));\r\n  };\r\n\r\n  const deleteDoctor = (id) => {\r\n    setDoctors(doctors.filter(doctor => doctor.id !== id));\r\n  };\r\n\r\n  const toggleAvailability = (id) => {\r\n    setDoctors(doctors.map(doctor => \r\n      doctor.id === id ? { ...doctor, available: !doctor.available } : doctor\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <DoctorsContext.Provider value={{\r\n      doctors,\r\n      addDoctor,\r\n      updateDoctor,\r\n      deleteDoctor,\r\n      toggleAvailability\r\n    }}>\r\n      {children}\r\n    </DoctorsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useDoctors = () => {\r\n  const context = useContext(DoctorsContext);\r\n  if (!context) {\r\n    throw new Error('useDoctors must be used within a DoctorsProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}